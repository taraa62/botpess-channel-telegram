{"version":3,"sources":["ReplyToClient.ts"],"names":["ReplyToClient","constructor","bp","bot","replyDefMethods","ReplyDefMethods","replyFromSettings","ReplyFromSettings","init","config","defaultSettings","updateDefSettings","outgoingHandler","event","next","channel","client","getBot","botId","messageType","type","chatId","threadId","target","_","includes","outgoingTypes","Error","key","isSend","reply","catch","er","console","error"],"mappings":";;;;;;;AACA;;AAIA;;AACA;;;;;;AAEO,MAAMA,aAAN,CAAoB;AAOzBC,EAAAA,WAAW,CAASC,EAAT,EAAiCC,GAAjC,EAA2C;AAAA;AAAA;;AAAA,2CAL9B,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,EAA4B,cAA5B,EAA4C,UAA5C,CAK8B;;AAAA;;AAAA;;AACpD,SAAKC,eAAL,GAAuB,IAAIC,gCAAJ,EAAvB;AACA,SAAKC,iBAAL,GAAyB,IAAIC,oCAAJ,CAAsBL,EAAtB,EAA0B,IAA1B,EAAgC,KAAKE,eAArC,CAAzB;AACD;;AAEMI,EAAAA,IAAP,CAAYC,MAAZ,EAAkC;AAChC,QAAI,CAAC,KAAKH,iBAAL,CAAuBI,eAA5B,EAA6C;AAC3C,WAAKJ,iBAAL,CAAuBK,iBAAvB,CAAyCF,MAAM,CAACC,eAAhD;AACD;AACF;;AAED,QAAaE,eAAb,CAA6BC,KAA7B,EAAkDC,IAAlD,EAAqG;AACnG,QAAID,KAAK,CAACE,OAAN,KAAkB,UAAtB,EAAkC;AAChC,aAAOD,IAAI,EAAX;AACD;;AACD,UAAME,MAAsC,GAAG,KAAKb,GAAL,CAASc,MAAT,CAAgBJ,KAAK,CAACK,KAAtB,CAA/C;;AACA,QAAI,CAACF,MAAL,EAAa;AACX,aAAOF,IAAI,EAAX;AACD;;AAED,QAAIK,WAAW,GAAGN,KAAK,CAACO,IAAN,KAAe,SAAf,GAA2B,MAA3B,GAAoCP,KAAK,CAACO,IAA5D;AACA,UAAMC,MAAM,GAAGR,KAAK,CAACS,QAAN,IAAkBT,KAAK,CAACU,MAAvC;;AAEA,QAAI,CAACC,gBAAEC,QAAF,CAAW,KAAKC,aAAhB,EAA+BP,WAA/B,CAAL,EAAkD;AAChD,aAAOL,IAAI,CAAC,IAAIa,KAAJ,CAAU,6BAA6Bd,KAAK,CAACO,IAA7C,CAAD,CAAX;AACD;;AAED,UAAMQ,GAAG,GAAG,UAAUT,WAAtB,CAhBmG,CAkBnG;;AAEA,QAAIA,WAAW,KAAK,QAApB,EAA8B,OAAO,MAAM,KAAKf,eAAL,CAAqBwB,GAArB,EAA0Bf,KAA1B,EAAiCG,MAAjC,EAAyCK,MAAzC,CAAb;AAC9B,UAAMQ,MAAM,GAAG,MAAM,KAAKvB,iBAAL,CAAuBwB,KAAvB,CAA6BX,WAA7B,EAA0CN,KAA1C,EAAiDG,MAAjD,EAAyDK,MAAzD,EAAiEU,KAAjE,CAAuEC,EAAE,IAAG;AAC/FC,MAAAA,OAAO,CAACC,KAAR,CAAcF,EAAd;AACA,aAAO,IAAP;AACD,KAHoB,CAArB,CArBmG,CAyBpG;AAEC;AACF;AACC;;AA/CwB","sourceRoot":"/home/taras/Документы/svn/botpress_12.1.0/modules/channel-telegram-t62/src/backend","sourcesContent":["import * as sdk from 'botpress/sdk'\nimport _ from 'lodash'\nimport Telegraf, { ContextMessageUpdate } from 'telegraf'\nimport { Config } from '../config'\nimport { Bot } from './Bot'\nimport { ReplyDefMethods } from './ReplyDefMethods'\nimport { ReplyFromSettings } from './ReplyFromSettings'\n\nexport class ReplyToClient {\n\n  private outgoingTypes = ['text', 'typing', 'image', 'login_prompt', 'carousel']\n  private replyFromSettings: ReplyFromSettings\n  private replyDefMethods: ReplyDefMethods\n\n\n  constructor(private bp: typeof sdk, private bot: Bot) {\n    this.replyDefMethods = new ReplyDefMethods()\n    this.replyFromSettings = new ReplyFromSettings(bp, this, this.replyDefMethods)\n  }\n\n  public init(config: Config): void {\n    if (!this.replyFromSettings.defaultSettings) {\n      this.replyFromSettings.updateDefSettings(config.defaultSettings)\n    }\n  }\n\n  public async outgoingHandler(event: sdk.IO.Event, next: sdk.IO.MiddlewareNextCallback): Promise<any> {\n    if (event.channel !== 'telegram') {\n      return next()\n    }\n    const client: Telegraf<ContextMessageUpdate> = this.bot.getBot(event.botId)\n    if (!client) {\n      return next()\n    }\n\n    let messageType = event.type === 'default' ? 'text' : event.type\n    const chatId = event.threadId || event.target\n\n    if (!_.includes(this.outgoingTypes, messageType)) {\n      return next(new Error('Unsupported event type: ' + event.type))\n    }\n\n    const key = 'send_' + messageType\n\n    // if (this.replyDefMethods[key]) return await this.replyDefMethods[key](event, client, chatId)\n\n    if (messageType === 'typing') return await this.replyDefMethods[key](event, client, chatId)\n    const isSend = await this.replyFromSettings.reply(messageType, event, client, chatId).catch(er=> {\n      console.error(er);\n      return null;\n    });\n   // if (!isSend) if (this.replyDefMethods[key]) return await this.replyDefMethods[key](event, client, chatId)\n\n    // TODO We don't support sending files, location requests (and probably more) yet\n  //  throw new Error(`Message type \"${messageType}\" not implemented yet`)\n  }\n\n\n}\n"]}